Aplikacja typu SPA (Single Page Application) o nazwie "Obiekty Inżynieryjne PLK", która będzie miała zaawansowane funkcjonalności oraz interfejs użytkownika dostosowany do różnych urządzeń.
Frontend będzie stworzony w technologiach HTML, CSS, JAVASCRIPT i REACT,  a backend w języku programowania PYTHON i odpowiednich dla niego frameworkach.

Funkcjonalności ogólne:
========================
1. Strona główna: 
Wyświetlanie ogólnych informacji o aplikacji, prezentacja listy produktów lub innych treści.

2. Rejestracja i logowanie: 
Użytkownicy będą mieli możliwość rejestracji oraz logowania do aplikacji, co umożliwi dostęp do zaawansowanych funkcji. Bedą 2 typy użytkowników, pierwszy będzie posiadał uprawnienia do odczytu i zapisu danych dotyczących obiektów inżynieryjnych oraz linii kolejowych, a drugi będzie posiadał uprawnienia jedynie do przeglądania tych danych.

3. Panel użytkownika: 
Po zalogowaniu użytkownicy zyskają dostęp do swojego panelu użytkownika, gdzie będą mogli zarządzać swoim kontem, ustawieniami, zamówieniami itp.
W panelu użytkownika będzie można:
- sprawdzić lub zmienić swoje hasło dostępu do aplikacji,
- zobaczyć typ użytkownika,
- sprawdzić lub zmienić swoje dane osobowe podane w panelu rejestracji.

4. Przeglądarka obiektów inżynieryjnych: 
Użytkownicy będą mieli możliwość wyboru linii kolejowej, na której chcą przeglądać obiekty inżynieryjne, a następnie zobaczyć listę obiektów przypisanych do wybranej linii kolejowej.
Będzie dostępne również pole "Dodaj obiekt" jeśli użytkownik posiada odpowiednie uprawnienia i będzie wyświetlał się formularz do uzupełnienia danych, żeby obiekt dodać. Aby obiekt był dodany będą musiały być podane kluczowe informacje.
Użytkownicy typu admin, będą również mogli edytować dane dowolnego obiektu inżynieryjnego.

5. Karta obiektu: 
Po wybraniu konkretnego obiektu użytkownik zostanie przekierowany do karty obiektu, gdzie znajdzie nagłówek, zdjęcie, parametry techniczne, opis stanu technicznego, lokalizację na mapie Google oraz sekcję komentarzy.

6. Integracja z zewnętrznym API:
Google Maps API: Aplikacja będzie korzystać z Google Maps API, aby wyświetlać lokalizację obiektów inżynieryjnych na mapie.


Dodatkowe funkcjonalności:
==========================
1. Zarządzanie stanem: 
Aplikacja będzie wykorzystywała mechanizmy zarządzania stanem, np. Redux, do efektywnego zarządzania danymi w aplikacji.

2. Obsługa zdarzeń: 
Aplikacja będzie miała zaimplementowaną logikę dla elementów, na których można wywołać zdarzenia, takie jak przyciski, co umożliwi interakcję użytkowników z aplikacją.

3. Własne style CSS: 
Dzięki zdefiniowaniu własnych styli CSS dla komponentów, aplikacja będzie miała spersonalizowany wygląd.

4. Responsywność: 
Aplikacja będzie dostosowana do różnych urządzeń, zapewniając odpowiednie wyświetlanie interfejsu użytkownika na komputerach PC i urządzeniach mobilnych.


Baza danych:
=============
Aplikacja będzie korzystała z bazy danych SQLite, w której będą przechowywane dane użytkowników, informacje o produktach, obiektach inżynieryjnych, itp.


Podsumowanie:
==============
Aplikacja będzie pełniła rolę przeglądarki dla obiektów inżynieryjnych na liniach kolejowych zawartych w wewnętrznej bazie danych. Pozwoli użytkownikom na rejestrację i logowanie, dostęp do panelu użytkownika, przeglądanie obiektów, edycją danych obiektów zawartych w bazie danych a także dodawanie lub usuwanie nowych, z czasem będzie można korzystać również z dodatkowych zaawansowanych funkcjonalności. Dzięki integracji z Google Maps API, użytkownicy będą mogli zobaczyć lokalizację obiektów inżynieryjnych na mapie. 

Aplikacja będzie responsywna i łatwo dostępna zarówno na komputerach PC, jak i urządzeniach mobilnych, co pozwoli użytkownikom na korzystanie z niej w dowolnym miejscu i czasie.

Dodatkowo, aplikacja będzie wykorzystywać mechanizmy zarządzania stanem, takie jak Redux, co pozwoli na efektywne zarządzanie danymi między komponentami, a także zaimplementowaną logikę dla elementów, takich jak przyciski, co umożliwi interakcję użytkowników z aplikacją w intuicyjny sposób.

Wydzielona warstwa frontendu i backendu pozwoli na niezależne zarządzanie logiką i wyglądem, co ułatwi pracę zespołom odpowiedzialnym za te części aplikacji.

Ostatecznie, aplikacja będzie kompleksowym narzędziem, które zapewni użytkownikom różnorodne funkcjonalności, umożliwi przeglądanie i zarządzanie obiektami inżynieryjnymi w sposób intuicyjny i przyjazny. 

Wykorzystanie odpowiednich technologii frontendowych i backendowych, wraz z bazą danych SQLite, pozwoli na skuteczne i wydajne działanie aplikacji oraz dostarczy użytkownikom pozytywne wrażenia podczas jej używania.

